values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=10,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=10,face="bold", colour = colors.patients[c("SRR7344575", "SRR7344574", "SRR7344546")]), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_text(size=10,face="bold",vjust = 0.9), panel.background = element_rect(fill = "white"),
legend.position = "top", legend.direction = "horizontal", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=9), legend.title = element_text(size = 10, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggplot2::ggplot(median_pred.three.patients, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point() +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=10,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_text(size=10,face="bold"),
axis.text.y = element_text(size=10,face="bold", colour = colors.patients[c("SRR7344575", "SRR7344574", "SRR7344546")]), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "top", legend.direction = "horizontal", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=9), legend.title = element_text(size = 10, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggplot2::ggplot(median_pred.three.patients, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 1) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=10,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_text(size=10,face="bold"),
axis.text.y = element_text(size=10,face="bold", colour = colors.patients[c("SRR7344575", "SRR7344574", "SRR7344546")]), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "top", legend.direction = "horizontal", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=9), legend.title = element_text(size = 10, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggplot2::ggplot(median_pred.three.patients, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=10,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_text(size=10,face="bold"),
axis.text.y = element_text(size=10,face="bold", colour = colors.patients[c("SRR7344575", "SRR7344574", "SRR7344546")]), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "top", legend.direction = "horizontal", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=9), legend.title = element_text(size = 10, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggplot2::ggplot(median_pred.three.patients, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_text(size=18,face="bold"),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients[c("SRR7344575", "SRR7344574", "SRR7344546")]), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "top", legend.direction = "horizontal", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=9), legend.title = element_text(size = 10, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggsave(paste0("../figures/BIM_cluster_presentation/patient_score_comb_gide_auslander_pathways_immunecells.pdf"), width = 12, height = 12)
ggplot2::ggplot(median_pred.three.patients, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_text(size=18,face="bold"),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients[c("SRR7344575", "SRR7344574", "SRR7344546")]), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "top", legend.direction = "horizontal", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=18), legend.title = element_text(size = 10, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggplot2::ggplot(median_pred.three.patients, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients[c("SRR7344575", "SRR7344574", "SRR7344546")]), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "top", legend.direction = "horizontal", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=18), legend.title = element_text(size = 10, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggsave(paste0("../figures/BIM_cluster_presentation/patient_score_comb_gide_auslander_pathways_immunecells.pdf"), width = 12, height = 12)
ggplot2::ggplot(median_pred.three.patients, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients[c("SRR7344575", "SRR7344574", "SRR7344546")]), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "top", legend.direction = "horizontal", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=14), legend.title = element_text(size = 14, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggsave(paste0("../figures/BIM_cluster_presentation/patient_score_comb_gide_auslander_pathways_immunecells.pdf"), width = 12, height = 12)
ggplot2::ggplot(median_pred.three.patients, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients[c("SRR7344575", "SRR7344574", "SRR7344546")]), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=14), legend.title = element_text(size = 14, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggsave(paste0("../figures/BIM_cluster_presentation/patient_score_comb_gide_auslander_pathways_immunecells.pdf"), width = 12, height = 12)
?dorothea
library(dorothea)
?dorothea
?viper
library(viper)
?viper
?run_viper
load("~/Desktop/PhD_TU:e/Research/mechanistic_biomarkers_immuno-oncology/data/BIM_cluster_presentation/ImmuneResponse_no_filter_SKCM_matrix_format.RData")
View(ImmuneResponse.no_filter)
axis.text.y = element_text(size=18,face="bold", colour = colors.patients, axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=14), legend.title = element_text(size = 14, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=14), legend.title = element_text(size = 14, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
median_pred <- median_pred[order(abs(median_pred$pred), decreasing = TRUE),]
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=14), legend.title = element_text(size = 14, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
All.scores.view <- subset(All.scores, View == "pathways_immunecells" & Analysis == "cor")
All.scores.view$Task <- factor(All.scores.view$Task, levels = c("CYT", "IS", "IPS", "IMPRES", "RohIS", "chemokine", "IS_Davoli", "Proliferation", "IFny", "ExpandedImmune",
"T_cell_inflamed", "MSI", "TIDE", "common_median"))
median_pred <- aggregate(pred ~ label + patient + Task,
FUN = "median", na.rm = T, data = All.scores.view)
colors.patients <-  predictions_immune_response[[Cancer]][[dataset]][[anal]][[view]][[algorithm]][["lab"]][[task]][[view]][,1]
colors.patients <- gsub("NR","red", colors.patients)
colors.patients <- gsub("R","blue", colors.patients)
median_pred <- median_pred[order(abs(median_pred$pred), decreasing = TRUE),]
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=14), legend.title = element_text(size = 14, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
All.scores.view <- subset(All.scores, View == "pathways_immunecells" & Analysis == "cor")
All.scores.view$Task <- factor(All.scores.view$Task, levels = c("CYT", "IS","RohIS", "chemokine", "IS_Davoli", "IFny", "ExpandedImmune",
"T_cell_inflamed"))
median_pred <- aggregate(pred ~ label + patient + Task,
FUN = "median", na.rm = T, data = All.scores.view)
colors.patients <-  predictions_immune_response[[Cancer]][[dataset]][[anal]][[view]][[algorithm]][["lab"]][[task]][[view]][,1]
colors.patients <- gsub("NR","red", colors.patients)
colors.patients <- gsub("R","blue", colors.patients)
colors.patients
median_pred <- median_pred[order(abs(median_pred$pred), decreasing = TRUE),]
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=14), legend.title = element_text(size = 14, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
median_pred <- aggregate(pred ~ patient + Task,
FUN = "median", na.rm = T, data = All.scores.view)
median_pred <- aggregate(pred ~ patient + Task,
FUN = "median", na.rm = T, data = All.scores.view)
median_pred$pred
median_pred.tasks <- aggregate(pred ~ patient, FUN = "median", na.rm = T, data = median_pred)
median_pred.tasks
order(abs(median_pred.tasks$pred)
)
rownames(median_pred.tasks[order(abs(median_pred.tasks$pred), decreasing = TRUE))
order.patients <- rownames(median_pred.tasks)[order(abs(median_pred.tasks$pred), decreasing = TRUE)]
order.patients
median_pred.tasks
order.patients <- median_pred.tasks$patient[order(abs(median_pred.tasks$pred), decreasing = TRUE)]
order.patients
median_pred$patient <- factor(median_pred$patient, levels = order.patients)
colors.patients
order.patients
colors.patients <- colors.patients[order.patients]
colors.patients
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=14), legend.title = element_text(size = 14, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggsave(paste0("../figures/BIM_cluster_presentation/patient_score_comb_gide_auslander_pathways_immunecells.pdf"), width = 12, height = 12)
colors.patients
View(median_pred)
View(median_pred)
View(median_pred)
87 * 7
All.scores.view <- subset(All.scores, View == "pathways_immunecells" & Analysis == "cor")
All.scores.view$Task <- factor(All.scores.view$Task, levels = c("CYT", "IS","RohIS", "IS_Davoli", "IFny", "ExpandedImmune",
"T_cell_inflamed"))
median_pred <- aggregate(pred ~ patient + Task,
FUN = "median", na.rm = T, data = All.scores.view)
colors.patients <-  predictions_immune_response[[Cancer]][[dataset]][[anal]][[view]][[algorithm]][["lab"]][[task]][[view]][,1]
colors.patients <- gsub("NR","red", colors.patients)
colors.patients <- gsub("R","blue", colors.patients)
# Choose three patients: "SRR7344575", "SRR7344574", "SRR7344567"
median_pred.three.patients <- subset(median_pred, patient %in% c("SRR7344575", "SRR7344574", "SRR7344546"))
median_pred.tasks <- aggregate(pred ~ patient, FUN = "median", na.rm = T, data = median_pred)
order.patients <- median_pred.tasks$patient[order(abs(median_pred.tasks$pred), decreasing = TRUE)]
median_pred$patient <- factor(median_pred$patient, levels = order.patients)
colors.patients <- colors.patients[order.patients]
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=14), legend.title = element_text(size = 14, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggsave(paste0("../figures/BIM_cluster_presentation/patient_score_comb_gide_auslander_pathways_immunecells.pdf"), width = 12, height = 12)
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=16,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=18,face="bold", colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=16), legend.title = element_text(size = 16, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=14,face="bold", colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=16), legend.title = element_text(size = 16, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
?theme
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=14,face="bold", colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=16), legend.title = element_text(size = 16, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=16,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=14,face="bold", colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=16), legend.title = element_text(size = 16, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 5) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=10, colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=16), legend.title = element_text(size = 16, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 3) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
# ggplot2::theme_linedraw() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=10, colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=16), legend.title = element_text(size = 16, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
ggsave(paste0("../figures/BIM_cluster_presentation/patient_score_comb_gide_auslander_pathways_immunecells.pdf"), width = 12, height = 12)
ggplot2::ggplot(median_pred, aes(x=pred, y=patient, fill = Task, color = Task)) +
ggplot2::geom_point(size = 3) +
ggplot2::scale_fill_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
ggplot2::scale_color_manual(name = "Task",
labels = levels(All.scores.view$Task),
values = as.character(colors.tasks)) +
# ggplot2::scale_alpha_manual(name = "Analysis",
#                             labels = levels(tmp.barplot$Analysis),
#                             values = c(1,0.5))  +
ggplot2::theme_minimal() +
#ggplot2::xlim(-1, 1) +
theme(axis.text.x = element_text(size=18,face="bold", angle = 0, vjust = 0.5, hjust=0.5), axis.title.x = element_blank(),
axis.text.y = element_text(size=10, colour = colors.patients), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.y = element_blank(), panel.background = element_rect(fill = "white"),
legend.position = "right", legend.direction = "vertical", panel.grid.major.y = element_line(colour = "black"),
legend.text=element_text(size=16), legend.title = element_text(size = 16, face="bold", vjust = 0.5)) +
labs(x = "prediction", y = "patients")
View(TCGA.samples.pancancer_with_screen_quantiseg_IS)
load("~/Desktop/PhD_TU:e/Research/mechanistic_biomarkers_immuno-oncology/analysis/pre-processing/TCGA_samples_available_screening_with_quanTIseq_IS_prot.RData")
View(TCGA.samples.pancancer_with_screen_quantiseg_IS)
View(TCGA.samples.pancancer_with_screen_quantiseg_IS_prot)
View(TCGA.samples.pancancer_with_screen_quantiseg_IS_prot)
